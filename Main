--[[
____                      ___                          ___      ____
|  _ \                     | |                         /_ |     |___ \
| |_) |   ___   _ __     __| |   ___   _ __    __   __  | |       __) |
|  _ <   / _ \ | '_ \   / _` |  / _ \ | '__|   \ \ / /  | |      |__ <
| |_) | |  __/ | | | | | (_| | |  __/ | |       \ V /   | |  _   ___) |
|____/   \___| |_| |_|  \__,_|  \___| |_|        \_/    |_| (_) |____/


--]]

-- // Setup \\ --

repeat task.wait() until game:IsLoaded()

   local isKohls, KohlsID, placeID, jobID, User, Display, LP, Character, UserInputService = false, 112420803 or 115670532, game.PlaceId, game.JobId, game.Players.LocalPlayer.Name, game.Players.LocalPlayer.DisplayName, game.Players.LocalPlayer, game.Players.LocalPlayer.Character, game:GetService("UserInputService"), game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(game.Players.LocalPlayer.Name .. "'s admin") 
   getgenv().Whitelisted = {}
   getgenv().WhitelistCount = {} getgenv().Connections = {} getgenv().Banned = {} getgenv().Pref = "!" getgenv().WhitelistConnection = {} getgenv().LockedSound = false getgenv().SongQueue = {}
   -- Game Check
   if game.PlaceId == KohlsID then
      isKohls = true

      -- Importing Scripts
      loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/traveIing/bender/main/Command%20Bar"))()
      loadstring(game:HttpGet("https://raw.githubusercontent.com/traveIing/bender/main/Notification"))()
      -- Greeting User
      if isfile("settings.txt") then
         notify("Bender", "Welcome back, " .. Display .. "!", 2)

      else
         notify("Bender", "Hello, " .. Display .. "! Thank you for using Bender V1.3!", 3)
      end
      -- Kicks if User Isn't In Correct Game
   else
      LP:Kick("Sorry, this script is not compatible with this game.")
   end

   -- // Startup \\ --

   if isKohls == true then

      -- New Player Checker --
      function Callback(text)
         if text == "Yes" then
            notify("Bender", "Press 'F9', or type '/console' to view a list of commands.", 3)
            print("I forgot to make the commands sorry uh")
         end
      end

      local Bind = Instance.new("BindableFunction")
      Bind.OnInvoke = Callback

      if not isfile("settings.txt") then
         writefile("settings.txt", "Executed before.")

         game.StarterGui:SetCore(
         "SendNotification",
         {
            Title = "Bender",
            Text = "Hello, ".. Display .."! It looks like you're new, would you like a list of commands?", -- I forgot to make them
            Button1 = "Yes",
            Button2 = "No",
            Duration = 50,
            Callback = Bind
         }
         )
      end
      -----------------------------------------------------------
      Connections[#Connections + 1] = LP.Chatted:Connect(function(msg)

      -- // Custom Cmds \\ --

      -- Teleporting Shortcuts --
      if string.sub(msg:lower(), 0, 5) == "bring" then
         local Player = string.sub(msg, 7)
         if Player == "all" then
            game.Players:Chat(":tp all me")
         elseif GetMatchingPlayerName(Player) then
         game.Players:Chat(":tp " .. GetMatchingPlayerName(Player) .. " me")
         else
            return
         end
      end
      if string.sub(msg:lower(), 0, 2) == "to" then
         local Player = string.sub(msg, 4)
         for _, v in pairs(game.Players:GetPlayers()) do
            if v.Name == GetMatchingPlayerName(Player) then
               LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
               break
            end
         end
      end
        -- Protection Shortcuts --
      if string.sub(msg:lower(), 0, #msg) == "shields" then
        game.Players:Chat(":god all")
        game.Players:Chat(":ff all")
     end
     if string.sub(msg:lower(), 0, #msg) == "rshields" then
        game.Players:Chat(":unff all")
        game.Players:Chat(":ungod all")
     end
        -- User Shortcuts --
      if string.sub(msg:lower(), 0, 3) == "ref" then
         local Player = string.sub(msg, 5)
      if Player == "all" then
         game.Players:Chat(":refresh all")
         elseif GetMatchingPlayerName(Player) then
            game.Players:Chat(":refresh " .. GetMatchingPlayerName(Player))
         else
            game.Players:Chat(":refresh " .. User)
         end
        end

      -- // Gears \\ --

      if string.sub(msg:lower(), 0, 6) == "carpet" then
        local Player = string.sub(msg, 8)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 225921000")
        else
           game.Players:Chat(":gear " .. User .. " 225921000")
        end
     end
     if string.sub(msg:lower(), 0, 5) == "laser" then
        local Player = string.sub(msg, 7)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 130113146")
        else
           game.Players:Chat(":gear " .. User .. " 130113146")
        end
     end
     if string.sub(msg:lower(), 0, 3) == "bat" then
        local Player = string.sub(msg, 5)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 55301897")
        else
           game.Players:Chat(":gear " .. User .. " 55301897")
        end
     end
     if string.sub(msg:lower(), 0, 5) == "money" then
        local Player = string.sub(msg, 7)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 16722267")
        else
           game.Players:Chat(":gear " .. User .. " 16722267")
        end
     end
     if string.sub(msg:lower(), 0, 8) == "ironfist" then
        local Player = string.sub(msg, 10)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 243790334")
        else
           game.Players:Chat(":gear " .. User .. " 243790334")
        end
     end
     if string.sub(msg:lower(), 0, 3) == "gun" then
        local Player = string.sub(msg, 5)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 97885508")
        else
           game.Players:Chat(":gear ".. User .. " 97885508")
        end
     end
     if string.sub(msg:lower(), 0, 6) == "bucket" then
        local Player = string.sub(msg, 8)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear ".. GetMatchingPlayerName(Player) .. " 18474459")
        else
           game.Players:Chat(":gear ".. User .. " 18474459")
        end
     end
     if string.sub(msg:lower(), 0, 6) == "potato" then
        local Player = string.sub(msg, 8)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat("gear " .. GetMatchingPlayerName(Player) .. " 00000000025741198")
        else
           game.Players:Chat("gear " .. User .. " 00000000025741198")
        end
     end
     if string.sub(msg:lower(), 0, 2) == "vg" then
        local Player = string.sub(msg, 4)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat("gear " .. GetMatchingPlayerName(Player) .. " 94794847")
        else
           game.Players:Chat("gear " .. User .. " 94794847")
        end
     end
     if string.sub(msg:lower(), 0, 5) == "taser" then
        local Player = string.sub(msg, 7)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 82357123")
        else
           game.Players:Chat(":gear " .. User .. " 82357123")
        end
     end
     if string.sub(msg:lower(), 0, 5) == "plane" then
        local Player = string.sub(msg, 7)
        if GetMatchingPlayerName(Player) then
           game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 163348575")
        else
           game.Players:Chat(":gear " .. User .. " 163348575")
        end
     end
     if string.sub(msg:lower(), 0, 5) == "ivory" then
      local Player = string.sub(msg, 7)
      if GetMatchingPlayerName(Player) then
         game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 108158379")
      else
         game.Players:Chat(":gear " .. User .. " 108158379")
      end
   end

      -- // Map Modifications \\ --

      -- Music Themes --
      if string.sub(msg:lower(), 0, #msg) == "rock" then
         game.Players:Chat(":fogend 500")
         game.Players:Chat(":fogcolor 500 0 0")
         game.Players:Chat(":time 1")
         game.Players:Chat(":gear all 99119198")
         game.Players:Chat(":music 0000000000001846129923")
      end
      -- Color Themes --
      if string.sub(msg:lower(), 0, #msg) == "blackout" then
         loadstring(game:HttpGet("https://pastebin.com/raw/VkQHaDA0"))()
         task.wait(0.25)
         game.Players:Chat(":colorshifttop 600 400 0")
         game.Players:Chat(":fogcolor 0 0 0")
         game.Players:Chat(":fogend 20")
         game.Players:Chat(":time 0")
      end
      if string.sub(msg:lower(), 0, #msg) == "pink" then
         game.Players:Chat(":fogcolor 250 0 500")
         game.Players:Chat(":fogend 100")
         game.Players:Chat(":time 1")
      end
      if string.sub(msg:lower(), 0, #msg) == "blue" then
         game.Players:Chat(":fogcolor 0 0 500")
         game.Players:Chat(":fogend 100")
         game.Players:Chat(":time 1")
      end
      if string.sub(msg:lower(), 0, #msg) == "red" then
         game.Players:Chat(":fogcolor 500 0 0")
         game.Players:Chat(":fogend 100")
         game.Players:Chat(":time 1")
      end
      -- Heaven / Hell --
      if string.sub(msg:lower(), 0, #msg) == "heaven" then
         game.Players:Chat(":fix")
         game.Players:Chat(":fogend 50")
         game.Players:Chat(":time 1")
      end
      if string.sub(msg:lower(), 0, #msg) == "hell" then
         game.Players:Chat(":fogend 500")
         game.Players:Chat(":time 1")
         game.Players:Chat(":fogcolor 500 0 0")
         game.Players:Chat(":gear all 31314931")
      end

      -- // Radio \\ --

      if string.sub(msg:lower(), 0, 4) == "play" then
         notify("Bender", "Please wait..", 1)
         local RequestedSong = string.sub(msg, 6)
         local Callback = tostring(game:HttpGet("https://search.roblox.com/catalog/json?CatalogContext=2&AssetTypeID=3&PageNumber=1&limit=500&Category=9&SortType=0&keyword=" .. RequestedSong .. "/", true))
         local SongID = string.match(Callback, "%d+")
         local SongName
         if SongID ~= nil and "[]" then
            SongName = tostring(game:GetService("MarketplaceService"):GetProductInfo(SongID).Name)
         game.Players:Chat(":music " .. SongID)
         table.insert(SongQueue, SongID)
         game.Players:Chat("msg Now Playing: " .. SongName)
         notify("Bender", "☑️", 1)
         repeat task.wait() until game:GetService("Workspace").Terrain["_Game"].Folder.Sound.TimePosition
         == game:GetService("Workspace").Terrain["_Game"].Folder.Sound.TimeLength or SoundCheck() == false
         table.remove(SongQueue, SongID)
         else
            task.wait(0.6)
            notify("Bender", " '" .. RequestedSong .. "' does not exist!", 1)
         end
      end
      if string.sub(msg:lower(), 0, #msg) == "loop" then
         -- Checking For Sound
         local SoundPlaying, Error = pcall(function()
         if not game:GetService("Workspace").Terrain["_Game"].Folder.Sound then
            return
         end
      end)
         if not SoundPlaying then
            notify("Bender", "A sound has to be playing in order to lock sound!", 1)
         return
         end

         if SoundCheck() == true then
            local SavedSound = tostring(game:GetService("Workspace").Terrain["_Game"].Folder.Sound.SoundId)
            local SoundID = tostring(string.match(SavedSound, "%d+$"))
            if not SoundID == "0" or "-" then
            notify("Bender", "Successfully locked sound: '" .. SoundID .. "'", 1)
            game.Players:Chat("alert Sound is locked")
            else
                game.Players:Chat("alert Sound is Muted")
                return
            end
            -- Setting Up Loop
            LockedSound = true
            while LockedSound == true do
               -- Preventing Sound Adjustments
               task.wait()
               if SoundCheck() == false or game:GetService("Workspace").Terrain["_Game"].Folder.Sound.SoundId ~= SavedSound
               or string.match(SavedSound, "%d+$") == 0 then
               game.Players:Chat(":music " .. SoundID)
               task.wait(1)
               end
            end
         end
      end
      if string.sub(msg:lower(), 0, #msg) == "unloop" then
         local Message = "Sound is Unlocked 📻"
         LockedSound = false
         notify("Bender", "Successfully unlocked song!", 1)
         game.Players:Chat("alert Sound is unlocked")
      end
      if string.sub(msg:lower(), 0, #msg) == "queue" then
         -- 
      end

      -- // Gear Handler \\ -- 
      if string.sub(msg:lower(), 0, 4) == "gear" then
        local RequestedGear = string.sub(msg, 6)
        local Callback = tostring(game:HttpGet("https://catalog.roblox.com/v1/search/items?category=Accessories&limit=10&subcategory=Gear&includeNotForSale=true&keyword=" .. RequestedGear .. "/", true))
        local GearID = string.match(Callback, "%d+") 
        game.Players:Chat(":gear " .. User .. " " .. GearID)
      end

      -- // Map Movers \\ --
      
      if string.sub(msg:lower(), 0, #msg) == "blockobby" then -- Very inefficient, I know lol
         game.Players:Chat(":respawn me")
         game.Players:Chat("nok")
         task.wait(0.4)
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(-51, 4, 15)
         task.wait(0.1)
         game.Players:Chat(":gear me 108158379")
         task.wait(0.7)
         EquipTool()
         task.wait(0.25)
         FireIvory()
         task.wait(0.1)
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(-34, 8, 48)
         task.wait(0.1)
         LP.Character.Humanoid.Sit = true
         task.wait(0.5)
         game.Players:Chat(":unpunish me")
         task.wait(0.15)
         FireIvory()
         task.wait(0.1)
         game.Players:Chat(":seizure me")
         task.wait(0.1)
         for i = 1, 8 do
            game.Players:Chat(":tp me me")
         end
         task.wait(0.25)
         game.Players:Chat(":respawn me")
         task.wait(0.5)
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(-50, 4, 21)
         task.wait(0.25)
         game.Players:Chat(":gear me 108158379")
         task.wait(0.7)
         EquipTool()
         task.wait(0.25)
         FireIvory()
         task.wait(0.1)
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(-34, 8, 48)
         task.wait(0.1)
         LP.Character.Humanoid.Sit = true
         task.wait(0.5)
         game.Players:Chat(":unpunish me")
         task.wait(0.15)
         FireIvory()
         task.wait(0.1)
         game.Players:Chat(":seizure me")
         task.wait(0.1)
         for i = 1, 8 do
            game.Players:Chat(":tp me me")
         end
         task.wait(0.25)
         game.Players:Chat(":seizure me")
         task.wait(0.15)
         game.Players:Chat(":respawn me")
      end

      -- // Fun Commands \\ --

      if string.sub(msg:lower(), 0, 5) == "break" then
         local Player = string.sub(msg, 7)
      if Player == "all" then
         game.Players:Chat(":freeze all")
         game.Players:Chat(":rainbowify all")
         game.Players:Chat(":particle all c")
         game.Players:Chat(":spin all")
         for i = 1, 350 do
         game.Players:Chat("dog all")
         end
         task.wait(0.6)
         game.Players:Chat(":thaw all")
         game.Players:Chat(":explode all")
         task.wait(0.25)
         game.Players:Chat(":clone all")
      elseif GetMatchingPlayerName(Player) then
            game.Players:Chat(":freeze " .. GetMatchingPlayerName(Player))
            game.Players:Chat(":rainbowify " .. GetMatchingPlayerName(Player))
            game.Players:Chat(":particle " .. GetMatchingPlayerName(Player) .. " c")
            game.Players:Chat(":spin " .. GetMatchingPlayerName(Player))
            for i = 1, 350 do
            game.Players:Chat("dog " .. GetMatchingPlayerName(Player))
            end
            task.wait(0.6)
            game.Players:Chat(":thaw " .. GetMatchingPlayerName(Player))
            game.Players:Chat(":explode " .. GetMatchingPlayerName(Player))
            task.wait(0.25)
            game.Players:Chat(":clone " .. GetMatchingPlayerName(Player))
         else
            notify("Bender", "Please specify who you would like to break!", 1)
      end
   end
   if string.sub(msg:lower(), 0, 5) == "prank" then
      local Player = string.sub(msg, 7)
      if GetMatchingPlayerName(Player) then
      game.Players:Chat(":size " .. GetMatchingPlayerName(Player) .. " nan")
      game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 33866728")
      else
         notify("Bender", "Please specify who you would like to prank!", 1)
      end
   end

      -- // Name Bypasses \\ --

      if string.sub(msg:lower(), 0, 6) == "mename" then
         local Command = string.sub(msg:lower(), 8)
         game.Players:Chat(Command .. " m")
      end
      if string.sub(msg:lower(), 0, 9) == "othername" then
         local Command = string.sub(msg:lower(), 11)
         game.Players:Chat(Command .. " other")
      end
      if string.sub(msg:lower(), 0, 7) == "allname" then
         local Command = string.sub(msg:lower(), 9)
         game.Players:Chat(Command .. " al")
      end

      -- // Security \\ --

      if string.sub(msg:lower(), 0, #msg) == "bypass" then
         local Old = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
         LP.Character:Destroy()
         task.wait(game.Players.RespawnTime + 0.4)
         LP.Character.HumanoidRootPart.CFrame = Old
         notify("Bender", "☑️", 1)
      end
      -- Antis --
      if string.sub(msg:lower(), 0, #msg) == "antik" then
         notify("Bender", "Enabled!", 2)
         local Timer = 1
         Connections[#Connections + 1] = game:GetService("RunService").RenderStepped:Connect(function()
         for _, player in pairs(game.Players:GetPlayers()) do
            if player.Backpack:FindFirstChild("HotPotato") or
            player.Character:FindFirstChild("HotPotato") or
            player.Character:FindFirstChild("BlueBucket") or
            player.Backpack:FindFirstChild("BlueBucket")
            then
               Timer = Timer + 1
               local Attacker = player.Name
               _G.antianchor = true
               game.Players:Chat(":clip all")
               game.Players:Chat(":ungear all")
               game.Players:Chat(":punish all")
               if Timer >= 2 then
                  game.Players:Chat(":unpunish all")
                  _G.antianchor = false
                  notify("Bender", "Kick Attempt By " .. Attacker, 4.5)
                  break
               end
            end
         end
         end)
      end
      if string.sub(msg:lower(), 0, #msg) == "antivg" then
         notify("Bender", "Enabled!", 1)
         local Timer = 1
         Connections[#Connections + 1] = game:GetService("RunService").RenderStepped:Connect(function()
         for _, t in pairs(game.Players:GetPlayers()) do
            if t.Name ~= User then
               if t.Backpack:FindFirstChild("VampireVanquisher") and t.Character.Torso.Size ~= Vector3.new(2, 2, 1) or
                t.Character:FindFirstChild("VampireVanquisher") and t.Character.Torso.Size ~= Vector3.new(2, 2, 1) then
                  Timer = Timer + 1
                  local Crasher = t.Name
                  game.Players:Chat(":unsize " .. Crasher)
                  game.Players:Chat(":removetools " .. Crasher)
                  notify("Bender", "Attempted VG Crash by " .. Crasher, 4.5)
                  break
               end
            end
         end
      end)
   end
      if string.sub(msg:lower(), 0, #msg) == "antianchor" then
         _G.antianchor = true
         while _G.antianchor == true do
            task.wait()
            local Anchor = LP.Character.HumanoidRootPart.Anchored
            if Anchor == true then
               Anchor = false
               end
            end
         end

      -- // Map Related \\ --

      -- Admin Pads --
      if string.sub(msg:lower(), 0, #msg) == "regen" then
         Regen()
         notify("Bender", "☑️", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "perm" then
         Admin()
         notify("Bender", "☑️", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "unperm" then
         Perm = false
         game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild("Touch to get admin"):FindFirstChild("Head").Transparency = false
         notify("Bender", "☑️", 1)
      end
      -- Map Objects --
      if string.sub(msg:lower(), 0, #msg) == "nok" then
         for _, Bricks in pairs(game:GetService("Workspace").Terrain._Game.Workspace.Obby:GetChildren()) do
            Bricks.CanTouch = false
         end
      end
      if string.sub(msg:lower(), 0, #msg) == "walls" then
         for _, Walls in pairs(game:GetService("Workspace").Terrain._Game.Workspace["Obby Box"]:GetChildren()) do
            Walls.CanCollide = false
         end
      end
      if string.sub(msg:lower(), 0, #msg) == "wallnok" then
         for _, Walls in pairs(game:GetService("Workspace").Terrain._Game.Workspace["Obby Box"]:GetChildren()) do
            Walls.CanCollide = false
            for _, Bricks in pairs(game:GetService("Workspace").Terrain._Game.Workspace.Obby:GetChildren()) do
               Bricks.CanTouch = false
            end
         end
      end
      -- Map Fixes --
      if string.sub(msg:lower(), 0, #msg) == "hardfix" then
         HardFix()
      end
      if string.sub(msg:lower(), 0, #msg) == "paintfix" then
         loadstring(game:HttpGet("https://pastebin.com/raw/ngdfPU9J"))()
         task.wait(0.25)
         notify("Bender", "☑️", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "sweep" then
         game.Players:Chat("🧹")
         game.Players:Chat(":clean")
         game.Players:Chat(":fix")
         game.Players:Chat(":ungear all")
         game.Players:Chat(":heal all 100")
         notify("Bender", "☑️", 1)
      end

      -- // Defensive Commands \\ --

      if string.sub(msg:lower(), 0, 4) == "kick" then

         local Player = string.sub(msg, 6)
         local SavedPlayerName = GetMatchingPlayerName(Player)
         local WasKicked = {}
         if Player == "unwl" then
               repeat
                  for _,v in pairs(game.Players:GetChildren()) do
                  task.wait()
                  if not table.find(WasKicked, v.Name) then
                  if v.Name ~= User and not table.find(Whitelisted, v.Name) then
                     table.insert(WasKicked, v.Name)
                     Kick(v.Name)
                     task.wait(0.5)
                     break
                  end
               end
            end
            until #WasKicked == #game.Players:GetPlayers() - #WhitelistCount - 1
            if #WasKicked == 1 then
            notify("Bender", "Successfully removed " .. #WasKicked .. " player!", 1)
            else
               notify("Bender", "Successfully removed " .. #WasKicked .. " players!", 1)
            end
         end
         if Player ~= "unwl" then
            if GetMatchingPlayerName(Player) == "No player found." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif GetMatchingPlayerName(Player) == "Multiple players found." then
               notify("Bender", "Multiple Players Found, unable to kick!", 1)
            elseif GetMatchingPlayerName(Player) == "Given input is too long." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif not GetMatchingPlayerName(Player) then
               notify("Bender", "Please specify who you would like to kick.", 1)
            elseif table.find(Whitelisted, GetMatchingPlayerName(Player)) then
               notify("Bender", "Player is whitelisted, unable to kick!", 1)
            else
            Kick(GetMatchingPlayerName(Player))
            notify("Bender", "Finished kick!", 1)
            end
         end
      end
   if string.sub(msg:lower(), 0, 5) == "mkick" then
      local Player = string.sub(msg, 7)
      MKick(GetMatchingPlayerName(Player))
   end
   if string.sub(msg:lower(), 0, 5) == "ckick" then
      local Player = string.sub(msg, 7)
      local SavedPlayerName = GetMatchingPlayerName(Player)
      if GetMatchingPlayerName(Player) == "No player found." then
         notify("Bender", "'" .. Player .. "' does not exist!", 1)
      elseif GetMatchingPlayerName(Player) == "Multiple players found." then
         notify("Bender", "Multiple Players Found, unable to kick!", 1)
      elseif GetMatchingPlayerName(Player) == "Given input is too long." then
         notify("Bender", "'" .. Player .. "' does not exist!", 1)
      elseif not GetMatchingPlayerName(Player) then
         notify("Bender", "Please specify who you would like to kick.", 1)
      elseif table.find(Whitelisted, GetMatchingPlayerName(Player)) then
         notify("Bender", "Player is whitelisted, unable to kick!", 1)
      else
         notify("Bender", "Kicking player, please wait..", 1)
         game.Players:Chat(":blind " .. GetMatchingPlayerName(Player))
         game.Players:Chat(":gear " .. GetMatchingPlayerName(Player) .. " 25741198")
         task.wait(0.25)
         task.spawn(function()
         for i = 1, 3 do
         game.Players:Chat(":punish all")
         game.Players:Chat(":skydive all")
         game.Players:Chat(":size all .3")
         game.Players:Chat(":size all .3")
         game.Players:Chat(":size all .3")
         game.Players:Chat(":freeze all")
         game.Players:Chat(":size all 10")
         game.Players:Chat(":size all 10")
         game.Players:Chat(":clone all")
         end
      end)
      task.spawn(function()
         for i = 1, 50 do
            game.Players:Chat(":gear all 253519495")
         end
      end)
      task.wait(1)      
      repeat task.wait() until CheckForCrash() == false
      game.Players:Chat(":respawn all")
      notify("Bender", "Successfully Crash Kicked " .. SavedPlayerName .. "!" , 1)
      end
   end
      if string.sub(msg:lower(), 0, 3) == "ban" then
         notify("Bender", "Please wait..", 1)
         local Player = string.sub(msg, 5)
         local Perm = CheckForPerm(GetMatchingPlayerName(User))
         local HasAdminPad = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(LP.Name .. "'s admin")
         if Perm == true or HasAdminPad then
            if GetMatchingPlayerName(Player) == "No player found." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif GetMatchingPlayerName(Player) == "Multiple players found." then
               notify("Bender", "Multiple Players Found, unable to ban!", 1)
            elseif GetMatchingPlayerName(Player) == "Given input is too long." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif not GetMatchingPlayerName(Player) then
               notify("Bender", "Please specify who you would like to whitelist.", 1)
            elseif table.find(Whitelisted, GetMatchingPlayerName(Player)) then
               notify("Bender", "Player is whitelisted, unable to ban!", 1)
            elseif table.find(Banned, GetMatchingPlayerName(Player)) then
               notify("Bender", "Player is already banned, re-kicking..", 1)
               Kick(GetMatchingPlayerName(Player))
            else
               Ban(GetMatchingPlayerName(Player))
               notify("Bender", "Banned " .. GetMatchingPlayerName(Player) .. "!", 1)
            end
         else
            notify("Bender", "You need admin to do that.", 1)
         end
      end
      if string.sub(msg:lower(), 0, 5) == "unban" then
         local Player = string.sub(msg, 7)
            if GetMatchingPlayerName(Player) == "No player found." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif GetMatchingPlayerName(Player) == "Multiple players found." then
               notify("Bender", "Multiple Players Found, unable to unban!", 1)
            elseif GetMatchingPlayerName(Player) == "Given input is too long." then
               notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif not GetMatchingPlayerName(Player) then
               notify("Bender", "Please specify who you would like to ban.", 1)
            else
               Unban(GetMatchingPlayerName(Player))
               notify("Bender", "Unbanned " .. GetMatchingPlayerName(Player).. "!", 1)
            end
         end

   if string.sub(msg:lower(), 0, #msg) == "close" then
      notify("Bender", "Please wait..", 1)
      local Timer = 1
      local HasPerm = CheckForPerm(GetMatchingPlayerName(User))
      local HasAdminPad = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(LP.Name .. "'s admin")

      -- Checking for Admin
      if HasPerm or HasAdminPad then
         notify("Bender", "Attempting to crash..", 1)
         -- Setting Up VG
         game.Players:Chat(":gear me 94794847")
         task.wait(0.2)
         EquipTool()
         task.wait(0.2)
         -- Setting Up Loop
         getgenv().Loop = true
         while Loop == true do
            -- Server Crash
            task.wait()
            Timer = Timer + 1
            task.spawn(function()
               for i = 1, 3 do
               game.Players:Chat(":punish all")
               game.Players:Chat(":skydive all")
               game.Players:Chat(":size all .3")
               game.Players:Chat(":size all .3")
               game.Players:Chat(":size all .3")
               game.Players:Chat(":freeze all")
               game.Players:Chat(":size all 10")
               game.Players:Chat(":size all 10")
               game.Players:Chat(":clone all")
               for i = 1, 5 do
                  game.Players:Chat(":size me .3")
               end
            end
         end)
            -- Breaking Loop
            if Timer == 100 then
               if CheckForCrash() == true then
               notify("Bender", "Server Crash Finalized, Switching Servers..", 1)
               ServerHop()
               break
               elseif CheckForCrash() ~= true then
                  notify("Bender", "HasCrashed = " .. tostring(CheckForCrash()), 5)
                  break
               end
            end
         end
   else
      notify("Bender", "You need admin first before attemping to crash.", 1)
      end
   end
   if string.sub(msg:lower(), 0, #msg) == "pclose" then
      notify("Bender", "Please wait..", 0.5)
      local HasPersons = CheckForPersons(LP.Name)
      local Timer = 1

      -- Checking For Persons
      if HasPersons then
         -- Setting Up Crash
         notify("Bender", "Attempting to crash..", 1)
         getgenv().Loop = true
         while Loop == true do
            -- Server Crash
            task.wait()
            Timer = Timer + 1
            task.spawn(function()
               game.Players:Chat(":rocket/all")
               game.Players:Chat(":clone all")
            end)
            -- Breaking Loop 
               if Timer == 150 then
            if CheckForCrash() == true then
               notify("Bender", "Server Crash Finalized, Switching Servers..", 1)
               ServerHop()
               break
            else
               notify("Bender", "ERROR: HasCrashed = " .. tostring(CheckForCrash()), 5)
            end
         end
      end
      else
         notify("Bender", "You need the Person299 gamepass for that!", 1)
   end
end
      if string.sub(msg:lower(), 0, #msg) == "vgclose" then
         game.Players:Chat(":gear me 94794847")
         task.wait(0.5)
         EquipTool()
         task.wait(0.5)
         game.Players:Chat(":size me .3")
         game.Players:Chat(":size me .3")
         game.Players:Chat(":size me .3")
      end

      -- // Other Scripts // --

      if string.sub(msg:lower(), 0, #msg) == "infy" then
         loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
      end
      if string.sub(msg:lower(), 0, #msg) == "chatlogs" then -- i also found this off the internet im LAZY OK
         loadstring(game:HttpGet("https://pastebin.com/raw/LCdrYTXf", true))()
      end
      if string.sub(msg:lower(), 0, #msg) == "dex" then
         loadstring(game:HttpGet("https://raw.githubusercontent.com/peyton2465/Dex/master/out.lua"))()
      end

      -- // Message Related \\ --

      if string.sub(msg:lower(), 0, 3) == "msg" then
         local Message = string.sub(msg, 5)
         game.Players:Chat("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n " .. Message)
      end
      if string.sub(msg:lower(), 0, 5) == "alert" then
         local Message = string.sub(msg, 7)
         game.Players:Chat("h \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n " .. Message)
      end
      if string.sub(msg:lower(), 0, 4) == "spam" then
         local Message = string.sub(msg, 6)
         _G.Spam = true
         while _G.Spam == true do
            task.wait()
            game.Players:Chat(Message)
            task.wait()
         end
      end
      if string.sub(msg:lower(), 0, 6) == "unspam" then
         _G.Spam = false
      end

      -- // Teleport Locations \\ --

      if string.sub(msg:lower(), 0, 4) == "pads" then
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-41, 4, 35))
      end
      if string.sub(msg:lower(), 0, 6) == "finish" then
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-41, 4, 35))
      end
      if string.sub(msg:lower(), 0, 5) == "house" then
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-23, 8, 73))
      end
      if string.sub(msg:lower(), 0, 4) == "roof" then
         LP.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-30, 42, 69))
      end

      -- // Information \\ --

      -- Server Information --
      if string.sub(msg:lower(), 0, #msg) == "jobid" then
         setclipboard(jobID)
         task.wait(0.5)
         notify("Bender", "Copied to clipboard!", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "placeid" then
         setclipboard(placeID)
         task.wait(0.5)
         notify("Bender", "Copied to clipboard!", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "copysound" then
         local Sound = game:GetService("Workspace").Terrain["_Game"].Folder.Sound.SoundId
         if Sound then
         setclipboard(tostring(Sound))
         task.wait(0.5)
         notify("Bender", "Copied to clipboard!", 1)
         else
            notify("Bender", "A sound isn't playing right now.", 1)
      end
   end
      if string.sub(msg:lower(), 0, #msg) == "ping" then
         local Ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(), " "
         notify("Bender", Ping, 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "crashcheck" then
         local HasCrashed = CheckForCrash()
         if HasCrashed == true then
            notify("Bender", "Server is crashed.", 1.5)
         else
            notify("Bender", "Server is not crashed!", 1.5)
         end
      end
      if string.sub(msg:lower(), 0, #msg) == "regcheck" then
         local Regen = game:GetService("Workspace").Terrain["_Game"].Admin:FindFirstChild("Regen")
         if Regen then
            notify("Bender", "☑️", 1)
         elseif not Regen then
            notify("Bender", "❌", 1)
         end
      end
      -- Player Information --
      if string.sub(msg:lower(), 0, 8) == "copyuser" then
         local Player = string.sub(msg:lower(), 10)
         setclipboard(GetMatchingPlayerName(Player))
      end
      if string.sub(msg:lower(), 0, 6) == "copyid" then
         local Player = string.sub(msg:lower(), 8)
         for _, v in pairs(game.Players:GetPlayers()) do
            if v.Name == GetMatchingPlayerName(Player) then
               setclipboard(v.UserId)
            end
         end
      end
      if string.sub(msg:lower(), 0, 9) == "permcheck" then
         local Player = string.sub(msg, 11)
         if GetMatchingPlayerName(Player) == "No player found." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif GetMatchingPlayerName(Player) == "Multiple players found." then
            notify("Bender", "Multiple Players Found.", 1)
         elseif GetMatchingPlayerName(Player) == "Given input is too long." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif not GetMatchingPlayerName(Player) then
            notify("Bender", "Please specify who you want to check.", 1)
         else
         if CheckForPerm(GetMatchingPlayerName(Player)) == true then
            notify("Bender", "'" .. GetMatchingPlayerName(Player) .. "' has perm!", 1)
         else
            notify("Bender", "'" .. GetMatchingPlayerName(Player) .. "' doesn't have perm!", 1)
         end
      end
   end

      -- // Utilities \\ --

      -- Advanced
      if string.sub(msg:lower(), 0, 3) == "run" then
         local chattedCode = string.sub(msg, 5)
         local Function, codeError = loadstring("return function() " .. chattedCode .. " end")
         if not Function then
            print("Error loading code: " .. codeError)
            return
         end
         local success, errorReason = pcall(Function())
         if not success then
            print("Error executing function: " .. errorReason)
            return
         end
         print("☑️")
      end
      -- Roblox Utilities
      if string.sub(msg:lower(), 0, #msg) == "exit" then
         game:Shutdown()
      end
--[[  if string.sub(msg:lower(), 0, 6) == "volume" then
         local volumeNumber = string.sub(msg, 8)
         local F = 0.
         UserSettings():GetService("UserGameSettings").MasterVolume = F .. volumeNumber
      end
      --]]
      if string.sub(msg:lower(), 0, #msg) == "rejoin" or string.sub(msg:lower(), 0, #msg) == "rj" then
         Rejoin()
      end
      if string.sub(msg:lower(), 0, #msg) == "clearlogs" then
         ClearLogs()
         notify("Bender", "☑️", 1)
      end
      if string.sub(msg:lower(), 0, #msg) == "clearchat" then
         ClearChat()
      end
      if string.sub(msg:lower(), 0, #msg) == "hop" then
         ServerHop()
      end
      -- Script Utilities
      if string.sub(msg:lower(), 0, #msg) == "endscript" then
         for _,Connection in ipairs(Connections) do
            Connection:Disconnect()
            LockedSound = false
            DestroyCommandBar()
            UnServerLock()
            EndWhitelist()
            break
         end
      end
      -- Chat Bars --
      if string.sub(msg:lower(), 0, #msg) == "cmdbar" then
         loadstring(game:HttpGet("https://raw.githubusercontent.com/traveIing/bender/main/Command%20Bar"))()
      end
      if string.sub(msg:lower(), 0, #msg) == "hidecmdbar" then
         DestroyCommandBar()
      end

      -- // Whitelist System \\ --

      if string.sub(msg:lower(), 0, 2) == "wl" then
         local Player = string.sub(msg, 4)
         if GetMatchingPlayerName(Player) == "No player found." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif GetMatchingPlayerName(Player) == "Multiple players found." then
            notify("Bender", "Multiple Players Found, unable to whitelist!", 1)
         elseif GetMatchingPlayerName(Player) == "Given input is too long." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif not GetMatchingPlayerName(Player) then
            notify("Bender", "Please specify who you would like to whitelist.", 1)
         elseif table.find(Whitelisted, GetMatchingPlayerName(Player)) then
            notify("Bender", "Player is already whitelisted!", 1)
         else
            Whitelist(GetMatchingPlayerName(Player))
            notify("Bender", "Whitelisted " ..GetMatchingPlayerName(Player) .. "!", 1)
            game.Players:Chat(":pm " .. GetMatchingPlayerName(Player) .. " You have been whitelisted! Your prefix is '" .. Pref .. "', say '" .. Pref .. "help' for a list of commands.")
         end
      end
      if string.sub(msg:lower(), 0, 4) == "unwl" then
         local Player = string.sub(msg, 6)
         if GetMatchingPlayerName(Player) == "No player found." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif GetMatchingPlayerName(Player) == "Multiple players found." then
            notify("Bender", "Multiple Players Found, unable to remove whitelist!", 1)
         elseif GetMatchingPlayerName(Player) == "Given input is too long." then
            notify("Bender", "'" .. Player .. "' does not exist!", 1)
         elseif not GetMatchingPlayerName(Player) then
            notify("Bender", "Please specify who you would like to unwhitelist.", 1)
         else
            Unwhitelist(GetMatchingPlayerName(Player))
            notify("Bender", "Unwhitelisted " .. GetMatchingPlayerName(Player) .. "!", 1)
            game.Players:Chat(":pm " .. GetMatchingPlayerName(Player) .. " You have been unwhitelisted.")
         end
      end
      if string.sub(msg:lower(), 0, 5) == "exile" then
         notify("Bender", "Please wait..", 1)
         local Player = string.sub(msg, 7)
         local Perm = CheckForPerm(GetMatchingPlayerName(User))
         local HasAdminPad = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(LP.Name .. "'s admin")
         if Perm == true or HasAdminPad then
            if string.sub(Player, 1, 5) == "user:" then
               local RequestedPlayer = string.sub(Player, 7)
               local PlayerHasUserId = game.Players:GetUserIdFromNameAsync(RequestedPlayer)
               if PlayerHasUserId then
                  if isfile("Banned/" .. RequestedPlayer .. ".txt") then
                  notify("Bender", "Player is already banned.", 1)
                  elseif PlayerHasUserId then
                  writefile("Banned/" .. RequestedPlayer .. ".txt", "Banned")
                  notify("Bender", "Successfully Perm-Banned " .. RequestedPlayer .. "!", 1)
                  else
                     notify("Bender", "'" .. RequestedPlayer .. "' doesn't exist!")
                  end
               elseif PlayerHasUserId ~= nil or "[]" then
                  notify("Bender", "'" .. RequestedPlayer .. " doesn't exist!", 1)
            else
               notify("Bender", "Could not find player with username " .. RequestedPlayer, 1)
            end
         else
               if GetMatchingPlayerName(Player) == "No player found." then
                  notify("Bender", "'" .. Player .. "' does not exist!", 1)
               elseif GetMatchingPlayerName(Player) == "Multiple players found." then
                  notify("Bender", "Multiple Players Found, unable to ban!", 1)
               elseif GetMatchingPlayerName(Player) == "Given input is too long." then
                  notify("Bender", "'" .. Player .. "' does not exist!", 1)
               elseif not GetMatchingPlayerName(Player) then
                  notify("Bender", "Please specify who you would like to Perm-Ban.", 1)
               elseif table.find(Whitelisted, GetMatchingPlayerName(Player)) then
                  notify("Bender", "Player is whitelisted, unable to ban!", 1)
               elseif isfile("Whitelisted/" .. GetMatchingPlayerName(Player) .. ".txt") then
                  notify("Bender", "Player is already banned, re-kicking..")
                  Kick(GetMatchingPlayerName(Player))
               else
                  Kick(GetMatchingPlayerName(Player))
                  writefile("Banned/" .. GetMatchingPlayerName(Player) .. ".txt", "Banned")
                  notify("Bender", "Successfully Perm-Banned '" .. GetMatchingPlayerName(Player) .. "'!", 1)
               end
            end
         end
      end
      if string.sub(msg:lower(), 0, 7) == "unexile" then
         local PlayerToUnban = string.sub(msg, 9)
            if string.sub(PlayerToUnban, 1, 5) == "user:" then
               local RequestedPlayer = string.sub(PlayerToUnban, 7)
               if isfile("Banned/" .. RequestedPlayer .. ".txt") then
                  delfile("Banned/" .. RequestedPlayer .. ".txt")
                  notify("Bender", "Unbanned '" .. RequestedPlayer .. "'!", 1)
               else
                  notify("Bender", "'" .. RequestedPlayer .. "' is not banned!")
               end
            else
            if GetMatchingPlayerName(PlayerToUnban) == "No player found." then
               notify("Bender", "'" .. PlayerToUnban .. "' does not exist!", 1)
            elseif GetMatchingPlayerName(PlayerToUnban) == "Multiple players found." then
               notify("Bender", "Multiple Players Found, unable to ban!", 1)
            elseif GetMatchingPlayerName(PlayerToUnban) == "Given input is too long." then
               notify("Bender", "'" .. PlayerToUnban .. "' does not exist!", 1)
            elseif not GetMatchingPlayerName(PlayerToUnban) then
               notify("Bender", "Please specify who you would like to unban.", 1)
            else
               if isfile("Banned/" .. GetMatchingPlayerName(PlayerToUnban) .. ".txt") then
                delfile("Banned/" .. GetMatchingPlayerName(PlayerToUnban) .. ".txt")
                  notify("Bender", "Successfully unbanned " .. GetMatchingPlayerName(PlayerToUnban) .. "!", 1)
               else
                  print(nil)
               end
            end           
         end
      end

      if string.sub(msg:lower(), 0, 4) == "rewl" then -- VERY BROKEN
        local Player = string.sub(msg, 6)
        local NotWhitelisted = {}
        local ReWhitelisted = {}
        if Player == "all" then
            for _, v in pairs(game.Players:GetChildren()) do
                if table.find(Whitelisted, v.Name) then
                    task.wait()
                    Unwhitelist(v.Name)
                    Whitelist(v.Name)
                    table.insert(ReWhitelisted, v.Name)
                    game.Players:Chat(":pm " .. v.Name .. " You have been whitelisted! Your prefix is '" .. Pref .. "', say '" .. Pref .. "help' for a list of commands!")
                else
                    table.insert(NotWhitelisted, v.Name)
                end
            end
            task.wait(0.25)
            if #ReWhitelisted == 1 then
            notify("Bender", "Successfully rewhitelisted " .. #ReWhitelisted .. " player!", 1)
            elseif #ReWhitelisted == 0 then
               notify("Bender", "Couldn't find any whitelisted players.", 1)
            else
               notify("Bender", "Successfully rewhitelisted " .. #ReWhitelisted .. " players!", 1)
            end
        else
            if GetMatchingPlayerName(Player) == "No player found." then
                notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif GetMatchingPlayerName(Player) == "Multiple players found." then
                notify("Bender", "Multiple players found. Unable to rewhitelist!", 1)
            elseif GetMatchingPlayerName(Player) == "Given input is too long." then
                notify("Bender", "'" .. Player .. "' does not exist!", 1)
            elseif not table.find(Whitelisted, GetMatchingPlayerName(Player)) then
                notify("Bender", "'" .. GetMatchingPlayerName(Player) .. "' has to be whitelisted in order to do that!", 1)
            else
                Unwhitelist(GetMatchingPlayerName(Player))
                Whitelist(GetMatchingPlayerName(Player))
                notify("Bender", "Rewhitelisted '" .. GetMatchingPlayerName(Player) .. "'!", 1)
                game.Players:Chat(":pm " .. GetMatchingPlayerName(Player) .. " You have been whitelisted! Your prefix is '" .. Pref .. "', say '" .. Pref .. "help' for a list of commands!")
            end
        end
    end
      if string.sub(msg:lower(), 0, 7) == "checkwl" then
         local Player = string.sub(msg, 9)
         if table.find(Whitelisted, GetMatchingPlayerName(Player)) then
            notify("Bender", GetMatchingPlayerName(Player) .. "' is whitelisted!", 1.5)
         elseif not table.find(Whitelisted, GetMatchingPlayerName(Player)) then
            notify("Bender", "'" .. Player .. " is not whitelisted!", 1.5)
         end
      end

      -- // Server Lock \\ --

      if string.sub(msg:lower(), 0, #msg) == "lock" then
        ServerLock()
        notify("Bender", "Locked server!", 1)
        game.Players:Chat("msg Server is locked")
      end
      if string.sub(msg:lower(), 0, #msg) == "unlock" then
         UnServerLock()
         notify("Bender", "Unlocked server!", 1)
         game.Players:Chat("msg Server is unlocked")
      end
   end)

      -- // Handlers \\
      
      -- Whitelist Handler
      Connections[#Connections + 1] = game.Players.PlayerAdded:Connect(function(Player)
         if table.find(Whitelisted, Player.Name) then
            game.Players:Chat("msg Whitelisted player '" .. Player.DisplayName .. "' joined!")
            game.Players:Chat("rewl " .. Player.Name)
            game.Players:Chat(":pm " .. Player.Name .. " You have been whitelisted! Your prefix is '" .. Pref .. "', say '" .. Pref .. "help' for a list of commands!")
         else
            return
         end
      end)
      -- Ban Handler
      Connections[#Connections + 1] = game.Players.PlayerAdded:Connect(function(NewPlayer)
         if table.find(Banned, NewPlayer.Name) or isfile("Banned/" .. NewPlayer.Name .. ".txt") then
            task.wait(0.5)
            Kick(NewPlayer.Name)
            end
         end)
      -- Folder Handler
      if not isfolder("Banned") then
         makefolder("Banned")
      else
      end
      if not isfolder("Whitelisted") then
         makefolder("Whitelisted")
      else
      end

      -- // Functions \\ --

      function HardFix()
         game.Players:Chat(":fix")
         game.Players:Chat(":clear")
         game.Players:Chat(":refresh all")
         game.Players:Chat(":removetools all")
         game.Players:Chat(":unchar all")
         game.Players:Chat(":music")
         loadstring(game:HttpGet("https://pastebin.com/raw/ngdfPU9J"))()
      end
      function Regen()
         fireclickdetector(game:GetService("Workspace").Terrain["_Game"].Admin:FindFirstChild("Regen").ClickDetector)
      end
      function GetMatchingPlayerName(input)
         local function GetLongestName()
            local tempGreatest = 0
            for i, v in pairs(game.Players:GetPlayers()) do
               if string.len(v.Name) > tempGreatest then
                  tempGreatest = string.len(v.Name)
               end
               if string.len(v.DisplayName) > tempGreatest then
                  tempGreatest = string.len(v.DisplayName)
               end
            end
            return tempGreatest
         end
         if string.len(input) ~= 0 then
            if string.len(input) <= GetLongestName() then
               local possibleplayers = {}
               input = string.lower(input)

               for i, v in pairs(game.Players:GetPlayers()) do
                  local plrname = string.lower(v.Name)
                  local displayname = string.lower(v.DisplayName)

                  if string.find(plrname, input) == 1 or string.find(displayname, input) == 1 then
                     table.insert(possibleplayers, v.Name)
                  end
               end

               if #possibleplayers == 0 then
                  return "No player found."
               elseif #possibleplayers == 1 then
                  return possibleplayers[1]
               elseif #possibleplayers > 1 then
                  return "Multiple players found."
               end
            else
               return "Given input is too long."
            end
         end
      end
      function EquipTool()
         for _, Item in pairs(LP.Backpack:GetDescendants()) do
            if Item:IsA "Tool" then
               Item.Parent = LP.Character
               break
            end
         end
      end
      function Rejoin()
         loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
         task.wait()
         execCmd("rejoin")
         task.wait()
      end
      function Admin()
         getgenv().Perm = true
         while Perm == true do
            task.wait()
            if not game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild(LP.Name .. "'s admin") then
               if game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild("Touch to get admin") then
                  local pad = game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild("Touch to get admin"):FindFirstChild("Head")
                  local padCFrame = pad.CFrame
                  wait(0.125)
                  pad.Transparency = 1
                  pad.CanCollide = false
                  repeat
                     wait()
                  until LP.Character:FindFirstChild("HumanoidRootPart")
                  pad.CFrame = LP.Character.HumanoidRootPart.CFrame
                  wait(0.125)
                  pad.CFrame = padCFrame
                  pad.CanCollide = true
               elseif not game:GetService("Workspace").Terrain["_Game"].Admin.Pads:FindFirstChild("Touch to get admin") then
                  Regen()
               end
            end
         end
      end
      function ClearLogs()
         for i = 1, 500 do
            task.wait()
            game.Players:Chat("ff \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n %")
         end
      end
      function ServerHop() -- shhhhhhhh
         execCmd("shop")
      end
      function Disconnect(Text)
         LP:Kick(Text)
      end
      function NoGears()
         getgenv().NoGears = true
         while _G.NoGears == true do
            while task.wait() do
               for _, Player in pairs(game.Players:GetPlayers()) do
                  if Player.Character:FindFirstChildOfClass("Tool") then
                     local Tool = Player.Character:FindFirstChildOfClass("Tool")
                     Tool:Destroy()
                  end
               end
            end
         end
      end
   end
--[[   function Attach(plr)
      local Enemy = game.Players[plr]
      local Player = LP
      local Character = Player.Character
      local Backpack = Player.Backpack
      local Tool = Backpack:FindFirstChildOfClass("Tool")
      local Old = Character.HumanoidRootPart.CFrame
      local ClonedHumanoid = Character.Humanoid:Clone()
      local FPDH = workspace["FallenPartsDestroyHeight"]

      ClonedHumanoid.Parent = Character
      spawn(
      function()
         repeat
            task.wait()
            firetouchinterest(Tool.Handle, Enemy.Character.HumanoidRootPart, 0)
            firetouchinterest(Tool.Handle, Enemy.Character.HumanoidRootPart, 1)
         until Tool.Parent ~= Character
         end)
   end
--]]
--[[      function OldLG()
         regen()
         _G.loopgrab = true
         while _G.loopgrab == true do
            local pads = workspace.Terrain._Game.Admin.Pads:GetPlayers("Head")
            for i, pad in pairs(pads) do
               pad.PrimaryPart = pad:FindFirstChild("Head")
               local pos = pad.PrimaryPart.CFrame
               task.wait(0)
               pad.PrimaryPart.CanCollide = false
               pad:SetPrimaryPartCFrame(LP.Character:WaitForChild("HumanoidRootPart").CFrame)
               task.wait(0)
               pad:SetPrimaryPartCFrame(pos)
               pad.PrimaryPart.CanCollide = true
               task.wait(0)
            end
         end
      end
--]]
      function DestroyCommandBar()
         local Gui = game.CoreGui:FindFirstChild("CommandBar")
         if Gui then
            Gui:Destroy()
         end
      end
      function Whitelist(Player)
         table.insert(Whitelisted, GetMatchingPlayerName(Player))
         table.insert(WhitelistCount, 1)
         for _, v in pairs(game.Players:GetPlayers()) do
            if table.find(Whitelisted, v.Name) then
               WhitelistConnection[#WhitelistConnection + 1] = v.Chatted:Connect(function(chat)
               local User = v.Name
               if isfile("Whitelisted/" .. User .. ".txt") then
                  local SavedPrefix = readfile("Whitelisted/" .. User .. ".txt")
                  Pref = SavedPrefix
               else
                  Pref = Pref
               end
               if string.sub(chat:lower(), 0, 1) == Pref then
                  local Command = string.sub(chat, 2)
                  game.Players:Chat(Command)
               end
               if string.sub(chat:lower(), 0, 5) == Pref .. "help" then
                  game.Players:Chat("pm " .. User .. " A list of commands has been whispered to you via chat!")
                  execCmd("whisper " .. User .. " [GEARS] Carpet, Laser, Bat, Money, Ironfist, Gun, Bucket, Potato, Taser, Plane [MAP] Rock, Pink, Blue, Red, Heaven, Hell, Blackout [FIXES] Hardfix, Paintfix, Regen, Sweep")
                  task.wait(0.2)
                  execCmd("whisper " .. User .. " [PSA] Msg, Spam, Unspam [PROTECTION] Kick, Ban, Unban, Exile, Unexile, Ckick (this crashes for a bit), Shields, Rshields, Antikick, Antivg [ADDITIONAL] Prefix")
                  task.wait(0.2)
                  execCmd("whisper " .. User .. " [FUN] Play, Break")
                  task.wait(0.25)
                  execCmd("whisper " .. User .. " Make sure to refer to your username when using certain commands. For example: 'carpet YourUsername', or 'carpet YourDisplayName'.")
                  task.wait(0.2)               end
               if string.sub(chat:lower(), 0, 7) == Pref .. "prefix" then
                  local RequestedPrefix = string.sub(chat, 9)
                  if isfile("Whitelisted/" .. User .. ".txt") then
                     delfile("Whitelisted/" .. User .. ".txt")
                  else
                  end
                  Pref = RequestedPrefix
                  writefile("Whitelisted/" .. User .. ".txt", RequestedPrefix)
                  game.Players:Chat(":pm " .. User .. " Your prefix has been changed to '" .. Pref .. "'")
               end
               if string.sub(chat:lower(), 0, 5) == Pref .. "kick" then
                local Player = string.sub(chat, 7)
                if GetMatchingPlayerName(Player) == LP.Name then
                   game.Players:Chat(":punish " .. LP.Name)
                   task.wait(2.5)
                   game.Players:Chat(":refresh " .. LP.Name)
                   Unwhitelist(Player)
                   game.Players:Chat(":pm " .. User .. " Wow. Can't believe you. Unwhitelisted! 🤦")
                else
                   return
                end
             end
             if string.sub(chat:lower(), 0, 3) == Pref ..  "ban" then
               local Player = string.sub(chat, 5)
               if GetMatchingPlayerName(Player) == LP.Name then
                  game.Players:Chat(":punish " .. LP.Name)
                  task.wait(2.5)
                  game.Players:Chat(":refresh " .. LP.Name)
                  EndWhitelist()
                  game.Players:Chat(":pm " .. User .. " Wow. Can't believe you. Unwhitelisted! 🤦")
                  end
               end
            end)
         end
      end
   end
      function Unwhitelist(Player)
         for i, v in pairs(Whitelisted) do
            if Player == v then
            table.remove(Whitelisted, i)
            table.remove(WhitelistCount, 1)
            EndWhitelist()
            break
         end
      end
   end
      function ServerLock()
         getgenv().LockServer = {}
         LockServer[#LockServer + 1] = game.Players.PlayerAdded:Connect(function(Player)
            if not table.find(Whitelisted, Player.Name) then
               task.wait(0.3)
               Kick(Player.Name)
               task.wait(0.5)
            else
               return Whitelist(v.Name)
            end
         end)
      end
      function UnServerLock()
         for i,ServerLock in ipairs(LockServer) do
            ServerLock:Disconnect()
            break
         end
      end
      function Reset()
            game.Players:Chat(":reset me")
            game.Players:Chat("god me")
      end
      function Punish(Player) -- thanks
         local Random = math.random(1, 1000)
         game.Players:Chat(":unpunish " .. Player .. " " .. Random)
         game.Players:Chat(":invisible " .. Player .. " " .. Random)
         game.Players:Chat(":refresh " .. Player .. " " .. Random)
         game.Players:Chat(":invisible " .. Player .. " " .. Random)
         game.Players:Chat(":kill " .. Player .. " " .. Random)
         game.Players:Chat(":trip " .. Player .. " " .. Random)
         game.Players:Chat(":setgrav " .. Player .. " -1000000000000000000000000000000000000000000000000000000000000000000000000000000000000")
         task.wait(.1)
         game.Players:Chat(":invisible " .. Player .. " " .. Random)
         task.wait(.2)
         game.Players:Chat(":invisible " .. Player .. " " .. Random)
         task.wait(.2)
         game.Players:Chat(":punish " .. Player .. " " .. Random)
         task.wait()
         for i = 1, 11 do
            game.Players:Chat(":punish " .. Player .. " " .. Random)
         end
      end
      function Ban(Player)
         Kick(Player)
         table.insert(Banned, Player)
      end
      function Unban(Player)
         for i, v in pairs(Banned) do
            if Player == v then
            table.remove(Banned, i)
            break
         end
      end
   end
      function CheckForCrash()
         local Ping1 = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(), " "
         task.wait(1)
         local Ping2 = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString(), " "

         if Ping1 == Ping2 then
            return true
         else
            return false
         end
      end
      function CheckForPerm(Player)
         for _,v in pairs(game.Players:GetChildren()) do
            if v.Name == Player then
               local PermNBC = 66254
               local PermBC =  64354
               local UserID = v.UserId

         if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PermNBC), PermNBC)
         or string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PermBC), PermBC) then
            return true
         else
            return false
         end
         break
      end
   end
end
function Kick(Player)
   local Old = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
   local Backpack = LP.Backpack
   local Tool = Backpack:FindFirstChildOfClass("Tool")
   local TimeElapsed = tick()
   -- Preventing Failure
   game.Players:Chat(":speed " .. Player .. " 0")
   game.Players:Chat(":speed " .. User .. " 0")
   game.Players:Chat(":ff " .. User)
   game.Players:Chat(":ff " .. GetMatchingPlayerName(Player))
   task.wait(0.2)
   -- Gearing Tools
   for i = 1,6 do
      game.Players:Chat(":gear " .. User .. " 25741198")
   end
   task.wait(0.15)
   -- Putting Player In Crash State
   game.Players:Chat(":blind " .. GetMatchingPlayerName(Player))
   game.Players:Chat(":freeze " .. GetMatchingPlayerName(Player))
   game.Players:Chat(":size " .. GetMatchingPlayerName(Player) .. " nan")
   game.Players:Chat(":paint " .. GetMatchingPlayerName(Player) .. " red")
   task.wait(0.1)
   -- Teleporting to Player
   for _,v in pairs(game.Players:GetPlayers()) do
      if v.Name == GetMatchingPlayerName(Player) then
         LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0,5,7.5)
         break
      end
   end
   task.wait(0.2)
   -- Giving Player Bugged Tools
   LP.Character.HumanoidRootPart.Anchored = true
   for i,v in pairs(LP.Backpack:GetChildren()) do
      v.Parent = LP.Character
      task.wait()
      v:Activate()
      task.wait()
      v.Parent = workspace
   end
   task.wait(0.35)
   -- Finalizing Kick
   LP.Character.HumanoidRootPart.Anchored = false
   LP.Character.HumanoidRootPart.CFrame = Old
   task.wait(0.2)
   game.Players:Chat(":speed " .. User .. " 16")
   game.Players:Chat(":ungear " .. User)
   game.Players:Chat(":unff " .. User)
   game.Players:Chat(":clean")
   print("Kicked in " .. tick() - TimeElapsed)
end
function MKick(Player) -- For Me-Names
   local Old = game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame
   local Backpack = LP.Backpack
   local Tool = Backpack:FindFirstChildOfClass("Tool")
   -- Preventing Failure
   game.Players:Chat(":speed m 0")
   game.Players:Chat(":speed " .. User .. " 0")
   game.Players:Chat(":ff " .. User)
   game.Players:Chat(":ff m")
   task.wait(0.2)
   -- Gearing Tools
   for i = 1,6 do
      game.Players:Chat(":gear " .. User .. " 25741198")
   end
   task.wait(0.2)
   -- Putting Player In Crash State
   game.Players:Chat(":blind m")
   game.Players:Chat(":freeze m")
   game.Players:Chat(":size m nan")
   game.Players:Chat(":paint m red")
   task.wait(0.1)
   -- Teleporting to Player
   for _,v in pairs(game.Players:GetPlayers()) do
      if v.Name == GetMatchingPlayerName(Player) then
         LP.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame * CFrame.new(0,5,7.5)
         break
      end
   end
   task.wait(0.2)
   -- Giving Player Bugged Tools
   LP.Character.HumanoidRootPart.Anchored = true
   task.wait(0.25)
   for i,v in pairs(LP.Backpack:GetChildren()) do
      v.Parent = LP.Character
      task.wait()
      v:Activate()
      task.wait()
      v.Parent = workspace
   end
   task.wait(0.35)
   -- Finalizing Kick
   LP.Character.HumanoidRootPart.Anchored = false
   LP.Character.HumanoidRootPart.CFrame = Old
   task.wait(0.3)
   game.Players:Chat(":speed " .. User .. " 16")
   game.Players:Chat(":ungear " .. User)
   game.Players:Chat(":ungear m")
   game.Players:Chat(":unff " .. User)
   game.Players:Chat(":clean")
end
   function EndWhitelist()
   for _,Connection in ipairs(WhitelistConnection) do
      Connection:Disconnect()
      break
   end
end
   function EndWhitelist()
   for _,Connection in ipairs(WhitelistConnection) do
      Connection:Disconnect()
      break
   end
end
-- the next functions were for like testing theyre not used but they exist so.. yknow
function GetUserId(name)
      local ValidId, NotValidId = pcall(function()
      game:GetService("Players"):GetUserIdFromNameAsync(Name)
   end)
   if ValidId then
      return true
   else
      return nil
   end
end
function FireIvory()
   local args = {
      [1] = Enum.KeyCode.E
  }
  game:GetService("Players").LocalPlayer.Character.IvoryPeriastron.Remote:FireServer(unpack(args))
end
function Sit()
   LP.Character.Humanoid.Sit = true
end
function Anchor()
   LP.Character.HumanoidRootPart.Anchored = true
end
function Unanchor()
   LP.Character.HumanoidRootPart.Anchored = false
end
function ClearChat()
   for i = 1, 5 do
      SendMessage("-------------------------------------------------------------------------------------")
   end
end
function SendMessage(Text)
   game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest"):FireServer(Text, "All")
end
function SoundCheck()
   local Sound, Error = pcall(function()
      if not game:GetService("Workspace").Terrain["_Game"].Folder.Sound then
         return
      end
   end)
      if not Sound then
         return false
      else
         return true
      end
end
function CheckForPersons(Player)
   for _,v in pairs(game.Players:GetChildren()) do
      if v.Name == Player then
         local PersonNBC = 35748
         local PersonBC =  37127
         local UserID = v.UserId

   if string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PersonNBC), PersonNBC)
   or string.match(game:HttpGet("https://inventory.roblox.com/v1/users/" .. UserID .. "/items/GamePass/" .. PersonBC), PersonBC) then
      return true
   else
      return false
   end
   break
end
end
end
